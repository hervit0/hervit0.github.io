import{_ as a,c as o,o as t,ae as l}from"./chunks/framework.B8KKhRA6.js";const m=JSON.parse('{"title":"Argeebeedle: When Wordle Met the World of Colors","description":"","frontmatter":{},"headers":[],"relativePath":"docs/articles/2025-08-01-argeebeedle.md","filePath":"docs/articles/2025-08-01-argeebeedle.md"}'),r={name:"docs/articles/2025-08-01-argeebeedle.md"};function i(n,e,d,s,c,h){return t(),o("div",null,e[0]||(e[0]=[l('<h1 id="argeebeedle-when-wordle-met-the-world-of-colors" tabindex="-1">Argeebeedle: When Wordle Met the World of Colors <a class="header-anchor" href="#argeebeedle-when-wordle-met-the-world-of-colors" aria-label="Permalink to &quot;Argeebeedle: When Wordle Met the World of Colors&quot;">​</a></h1><blockquote><p><a href="https://hervit0.github.io/argeebeedle/" target="_blank" rel="noreferrer">I created a game I can&#39;t beat...</a></p></blockquote><h2 id="gamer-one-day-gamer-every-day" tabindex="-1">Gamer one day, gamer every day <a class="header-anchor" href="#gamer-one-day-gamer-every-day" aria-label="Permalink to &quot;Gamer one day, gamer every day&quot;">​</a></h2><p>I am an avid player of <a href="https://www.nytimes.com/games/wordle/index.html" target="_blank" rel="noreferrer">Wordle</a>, and all of its variants (as a musician, special mention to <a href="https://bandle.app/menu" target="_blank" rel="noreferrer">Bandle</a>). Playing video games, solving riddles, puzzles etc is one of my core components, so I wanted to create a Wordle-like game, but I didn&#39;t know what to base it on, e.g. shall I make people guess a movie title, a music note, a celebrity, etc?</p><p>And then I thought about colours, there are many (many) ways to represent colours, the two most common ones are:</p><ul><li>by the <a href="https://www.w3schools.com/html/html_colors_hex.asp" target="_blank" rel="noreferrer">hexadecimal</a> value (HEX): <code>#1ecbe1</code> is yellow-ish</li><li>by the <a href="https://en.wikipedia.org/wiki/RGB_color_model" target="_blank" rel="noreferrer">RGB</a> value (RGB): <code>(3, 94, 252)</code> is blue-ish</li></ul><p>The latter retained my attention for the following reasons:</p><ul><li>the 3 values represent the amount of red, green and blue in the colour, that value varies from 0 (none) to 255 (100%)</li><li>the name RGB stands for Red, Green and Blue, so there is no to little effort to map the numbers to the colours, e.g. (1 ,2 ,3) means red is 1, green is 2 and blue is 3</li><li>it is based on the additive color model, it is a fancy name, but it just boils down to the colour painting we mix when we are in primary school: mixing equally a bit of red and green painting will give a yellow mixtures, blue and red will give purple, etc etc</li></ul><p>It is then fairly intuitive for a non-technical person to understand the RGB system:</p><ul><li><code>(255, 0, 0)</code> is probably quite red</li><li><code>(0, 255, 0)</code> is probably quite green</li><li><code>(0, 0, 255)</code> is probably quite blue</li><li><code>(250, 250, 0)</code> is probably something yellow-ish</li><li><code>(250, 0, 250)</code> is probably something purple-ish</li><li>etc</li></ul><p>The only edge cases that might be tricky to know are:</p><ul><li><code>(0, 0, 0)</code> is black</li><li><code>(255, 255, 255)</code> is white</li></ul><p>So the idea would be: display a colour, make the user guess the RGB value of the colour, and set the Wordle structure accordingly (6 guesses, feedback after a guess, leaderboard etc).</p><p>Then I prospected what already existed...</p><h2 id="but-it-s-already-done-so-you-can-t-do-it-again" tabindex="-1">&quot;But it&#39;s already done, so you can&#39;t do it again&quot; <a class="header-anchor" href="#but-it-s-already-done-so-you-can-t-do-it-again" aria-label="Permalink to &quot;&quot;But it&#39;s already done, so you can&#39;t do it again&quot;&quot;">​</a></h2><p>Nah, don&#39;t ever let anyone saying that to you:</p><ul><li>you can always come up with something better</li><li>add new features</li><li>have new ideas</li></ul><p>Having said that, the existing wordle-clones are pretty good! With good names as well:</p><ul><li><a href="https://colourdle.co.uk/" target="_blank" rel="noreferrer">Colourdle</a></li><li><a href="https://colordle.ryantanen.com/" target="_blank" rel="noreferrer">Colordle</a></li><li><a href="https://colorfle.com/" target="_blank" rel="noreferrer">Colorfle</a></li></ul><p>Following my own piece of advice, I decided to carry one and create &quot;RGB-dle&quot;, or (if you haven&#39;t figured it out yet) &quot;Argeebeedle&quot;!</p><h2 id="game-logic" tabindex="-1">Game logic <a class="header-anchor" href="#game-logic" aria-label="Permalink to &quot;Game logic&quot;">​</a></h2><p>TODO</p><h2 id="technical-considerations" tabindex="-1">Technical considerations <a class="header-anchor" href="#technical-considerations" aria-label="Permalink to &quot;Technical considerations&quot;">​</a></h2><p>TODO</p><h2 id="reflections-and-takeaways" tabindex="-1">Reflections and takeaways <a class="header-anchor" href="#reflections-and-takeaways" aria-label="Permalink to &quot;Reflections and takeaways&quot;">​</a></h2><p>TODO</p>',26)]))}const p=a(r,[["render",i]]);export{m as __pageData,p as default};
